/**
 * GEDCOM files are plain ASCII files that must be read asyn by Javascript.
 * This script reformats the original GEDCOM file records
 * into a plain-old Javascript array which is then written to a JSON data file.
 * This file may then be *imported* by other Javascript files without async/await.
 */
import fs from 'fs'
import { file2JsonArray } from '../file-reader/file2JsonArray.js'

const time1 = new Date()
const progName = (process.argv[1]).split('\\').pop()
const gedcomFile = './generated/gedcom/Ancestry.ged'
const varName = '_allRecords'
const outputFile = `./generated/gedcom/${varName}.js`

const records = await file2JsonArray(gedcomFile)

const head = [
    `// auto-generated by ${progName} on ${new Date().toLocaleString()}`,
    `// from original GEDCOM file '${gedcomFile}'`,
    `export const ${varName} = [`
]
let js = head.join('\n') + '\n'
for(let i=0; i<records.length; i++) js += JSON.stringify(records[i]) + ',\n'
js += ']\n'
fs.writeFile(outputFile, js, function (err) { if (err) throw err })

console.log(`\n${progName}`)
console.log(`    1 - read ${records.length} GEDCOM file records from '${gedcomFile}'.`)
console.log(`    2 - wrote ${records.length} [<GEDCOM record>] elements into '${outputFile}'.`)
console.log(`    Successfully completed in ${new Date()-time1} msec`)
