import fs from 'fs'
import { Genex, Channels, Vicinities } from '../genex/index.js'
// Data
import { _places } from '../data/generated/genex/_places.js'
import { _vicinityDefsAll } from './customized/genex/_vicinityDefsAll.js'
import { _vicinityDefsBevins } from './customized/genex/_vicinityDefsBevins.js'

const time1 = new Date()
const progName = (process.argv[1]).split('\\').pop()
const genex = new Genex()

function fix(str) { return JSON.stringify(str) }

function vicinityFor(nameKey, vicinDefs, varName) {
    const person = genex.person(nameKey)
    const ancestors = new Channels(person).persons()
    const vicins = new Vicinities(vicinDefs, ancestors)
    const vicArray = vicins.vicinityArray()
    const missing = vicins.missing()
    writeVicins(varName, vicArray, ancestors, missing)
}

console.log(`\n${progName}`)
console.log(`    1 - created Genex with ${genex.people().length} Person and ${genex.family().length} Family instances.`)

// vicinityFor('Collin Douglas Bevins 1952', _vicinityDefsAll, '_vicinityResultsCdb')
vicinityFor('William Collins Bevins 1931', _vicinityDefsBevins, '_vicinityResultsBevins')
// vicinityFor("Barbara Jeanne Riley 1953", _vicinityDefsAll, '_vicinityResultsBjr')

// ALL vicinities
// const vicins = new Vicinities(_vicinityDefsAll, genex.people())
// const vicArray = vicins.vicinityArray()
// writeVicins('_vicinityResultsAll', vicArray, genex.people())

// Write Genex _vicins.js file
function writeVicins(varName, vicArray, people, missing=[]) {
    const fileName = `./diagnostics/genex/vicinities/${varName}.js`
    let js = `// auto-generated by ${progName} on ${new Date().toLocaleString()}\n`
        + `// Contains ${vicArray.length} Places from ${people.length} Persons:\n`
        + `// There are ${missing.length} Persons whose Birth Place is not in a known Vicinity.\n`
        + `export const ${varName} = [\n`
    // Loop for each Vicinity
    for(let i=0; i<vicArray.length; i++) {
        const v = vicArray[i]
        js += `    [${fix(v.key())}, ${fix(v.label())}, ${v.persons().size}, [\n`
        // Loop for each Person
        const parr = Array.from(v.persons().entries())
        // for(let j=0; j<v.persons().length; j++) {
        for(let j=0; j<parr.length; j++) {
            const [person, gevents] = parr[j]
            js += `        [${j}, ${fix(person.label())}, ${gevents.length}, [,\n`
            // Loop for each GenEvent
            for(let k=0; k<gevents.length; k++) {
                const gev = gevents[k]
                js += `            [${k}, `
                    + `${fix(gev.type())}, ${gev.date().y()}, `
                    + `${fix(gev.place().standard())}],\n`
            }
            js += '        ]],\n'
        }
        js += '    ]],\n'
    }
    js += ']\n'
    // Format missing birth places
    const ar = []
    for(let i=0; i<missing.length; i++) {
        const p = missing[i]
        ar.push(`// [${p.birthPlaceStandard().padEnd(24)}] ${p.label()}`)
    }
    ar.sort()
    js += `// There are ${missing.length} Persons whose Birth Place is not in a known Vicinity.\n`
    js += ar.join('\n')
    fs.writeFile(fileName, js, function (err) { if (err) throw err })
    console.log(`    2 - wrote ${vicArray.length} Vicinity from ${people.length} Persons into '${fileName}'.`)
}
console.log(`    Successfully completed in ${new Date()-time1} msec`)
