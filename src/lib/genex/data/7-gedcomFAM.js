// Modules
import fs from 'fs'
import { constructGedcomNestedRecords } from '../gedcom/constructGedcomNestedRecords.js'
import { constructGedcomFAMBlock, block2Json, checkMultipleRecords, applyPreferredData } from '../gedcom/constructGedcomFAMBlock.js'
// Data
import { _gedcomRecordsFiltered } from './generated/gedcom/_gedcomRecordsFiltered.js'
import { _gedcomINDIPreferredMASTER } from './customized/_gedcomINDIPreferredMASTER.js'

const time1 = new Date()
const progName = (process.argv[1]).split('\\').pop()
const inputFile = './generated/gedcom/_gedcomRecordsFiltered.js'
const preferredFile = './customized/_gedcomINDIPreferredMASTER.js'  // used for both INDI and FAM
const multiplesName = '_gedcomFAMMultipleRecords'
const multiplesFile = `./generated/gedcom/${multiplesName}.js`
const outputName = '_gedcomFAM'
const outputFile = `./generated/gedcom/${outputName}.js`

// Use a GedcomNestedRecords instance since it handles all parsing, CONC, and CONT
const gedcom = constructGedcomNestedRecords(_gedcomRecordsFiltered)
const map = gedcom.topLevelRecordsFor('FAM')
const blocks = Array.from(map.entries())
const preferredMap = new Map(_gedcomINDIPreferredMASTER)
const multiples = []
const json = []

for(let i=0; i<blocks.length; i++) {
    let block = constructGedcomFAMBlock(gedcom, blocks[i]) // blocks[i] is the head record
    block = applyPreferredData(block, preferredMap)
    
    const mult = checkMultipleRecords(block)
    for(let i=0; i<mult.length; i++) multiples.push(mult[i])
    if (mult.length) multiples.push('')

    const js = block2Json(block)
    for(let i=0; i<js.length; i++) json.push(js[i])
}

let head = [
    `// auto-generated by ${progName} on ${new Date().toLocaleString()}`,
    `// from FILTERED GEDCOM JSON records file '${inputFile}'`,
    `// Indicate preferred by copying each block into ${preferredFile}`,
    `export const ${multiplesName} = [`
]
let js = head.join('\n') + '\n' + multiples.join('\n') + ']\n'
fs.writeFile(multiplesFile, js, function (err) { if (err) throw err })
    
head = [
    `// auto-generated by ${progName} on ${new Date().toLocaleString()}`,
    `// from FILTERED GEDCOM JSON records file '${inputFile}'.`,
    `export const ${outputName} = [`
]
js = head.join('\n') + '\n' + json.join('\n') + ']\n'
fs.writeFile(outputFile, js, function (err) { if (err) throw err })

console.log(`\n${progName}`)
console.log(`    1 - read ${_gedcomRecordsFiltered.length} [<GEDCOM record>] elements from '${inputFile}'.`)
console.log(`    2 - wrote ${blocks.length} INDI instances into '${outputFile}'.`)
console.log(`    3 - wrote ${multiples.length} multiple record option elements into '${multiplesFile}'.`)
console.log(`    Successfully completed in ${new Date()-time1} msec`)
