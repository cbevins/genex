// Modules
import fs from 'fs'
import { parseRecord } from '../gedcom/parseRecord.js'
import { GedcomDateParser } from '../gedcom/GedcomDateParser.js'
// Data
import { _allRecords } from './generated/gedcom/_allRecords.js'
import { _gedcomKnownDateQuals, _gedcomKnownDateMonths } from './customized/_gedcomKnownDateMonths.js'

const time1 = new Date()
const progName = (process.argv[1]).split('\\').pop()
const inputFile = './generated/gedcom/_allRecords.js'
const unknownName = '_allDatesUnknown'
const unknownFile = `./diagnostics/gedcom/${unknownName}.js`

// let records = _gedcomRecordsFiltered
const dp = new GedcomDateParser(_gedcomKnownDateQuals, _gedcomKnownDateMonths)
const badDates = []
const useCases = [0, 0, 0, 0, 0,   0, 0, 0, 0, 0,  0, 0, 0, 0, 0,  0, 0, 0, 0, 0]
let nDates = 0
let context0 = ''
let context1 = ''
for (let i=0; i<_allRecords.length; i++) {
    const record = parseRecord(_allRecords[i], i+1)
    if (record) {
        const [level, type, content] = record
        if (level === 0) context0 = type
        else if (level === 1) context1 = type
        if (context0 !== 'OBJE' && context1 !== '_MILT') {
            if (type === 'DATE') {
                nDates++
                const d = dp.parse(content)
                useCases[d.useCase]++
                if (! d.useCase) {
                    badDates.push({line: i, content, ...d})
                }
            }
        }
    }
}
// Write unknown DATEs
let head = [
    `// auto-generated by ${progName} on ${new Date().toLocaleString()}`,
    `// from ALL GEDCOM JSON records file '${inputFile}'`,
    `export const ${unknownName} = [`
]
let js = head.join('\n') + '\n'
for(let i=0; i<badDates.length; i++) js += `${JSON.stringify(badDates[i], null, 4)},\n`
js += ']\n'
fs.writeFile(unknownFile, js, function (err) { if (err) throw err })

// console.log(useCases)
console.log(`\n${progName}`)
console.log(`    1 - read ${_allRecords.length} [<GEDCOM record>] elements with ${nDates} DATE records from '${inputFile}'.`)
console.log(`    2 - wrote ${badDates.length} *UN-PARSABLE* date strings to '${unknownFile}'.`)
console.log(`    Successfully completed in ${new Date()-time1} msec`)
